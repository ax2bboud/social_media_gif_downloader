name: CI

on:
  push:
    branches: [main, master]
  pull_request:
  workflow_dispatch:
    inputs:
      build_executables:
        description: 'Build executables for all platforms'
        required: false
        default: false
        type: boolean

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce matrix size for faster CI
          - os: macos-latest
            python-version: '3.8'
          - os: macos-latest
            python-version: '3.9'
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
      shell: bash

    - name: Run tests
      run: |
        PYTHONPATH=$PWD pytest --cov=social_media_gif_downloader --cov-report=xml --ignore=tests/test_integration.py
      shell: bash

  build_executables:
    if: github.event.inputs.build_executables == 'true' || (github.event_name == 'workflow_dispatch' && github.event.inputs.build_executables == 'true')
    needs: test
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            ext: ""
          - os: macos-latest
            ext: ".app"
          - os: windows-latest
            ext: ".exe"
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: 3.11

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
      shell: bash

    - name: Download FFmpeg
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          choco install ffmpeg
          cp C:/ProgramData/chocolatey/bin/ffmpeg.exe .
          cp C:/ProgramData/chocolatey/bin/ffprobe.exe .
        elif [ "${{ matrix.os }}" == "macos-latest" ]; then
          brew install ffmpeg
          cp $(brew --prefix ffmpeg)/bin/ffmpeg .
          cp $(brew --prefix ffmpeg)/bin/ffprobe .
        else
          sudo apt-get update && sudo apt-get install -y ffmpeg
          cp /usr/bin/ffmpeg .
          cp /usr/bin/ffprobe .
        fi
      shell: bash

    - name: Download yt-dlp
      run: |
        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp.exe -o yt-dlp.exe
        else
          curl -L https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp -o yt-dlp
          chmod +x yt-dlp
        fi
      shell: bash

    - name: Generate and modify .spec file
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          pyi-makespec social_media_gif_downloader.py --name "Social Media GIF Downloader" --windowed --icon=app_icon.ico
        else
          pyi-makespec social_media_gif_downloader.py --name social-media-gif-downloader --onefile --windowed --icon=app_icon.ico
        fi

        if [ "${{ matrix.os }}" == "windows-latest" ]; then
          sed -i 's/binaries=\[]/binaries=[('\''ffmpeg.exe'\'', '\''.'\''), ('\''ffprobe.exe'\'', '\''.'\''), ('\''yt-dlp.exe'\'', '\''.'\'')]/g' social-media-gif-downloader.spec
        else
          sed -i 's/binaries=\[]/binaries=[('\''ffmpeg'\'', '\''.'\''), ('\''ffprobe'\'', '\''.'\''), ('\''yt-dlp'\'', '\''.'\'')]/g' social-media-gif-downloader.spec
        fi
      shell: bash

    - name: Build executable with PyInstaller
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          pyinstaller "Social Media GIF Downloader.spec"
        else
          pyinstaller social-media-gif-downloader.spec
        fi
      shell: bash

    - name: Rename executable
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          mv "dist/Social Media GIF Downloader.app" "dist/social-media-gif-downloader-${{ matrix.os }}.app" || mv "dist/social-media-gif-downloader${{ matrix.ext }}" "dist/social-media-gif-downloader-${{ matrix.os }}${{ matrix.ext }}"
        else
          mv dist/social-media-gif-downloader${{ matrix.ext }} "dist/social-media-gif-downloader-${{ matrix.os }}${{ matrix.ext }}"
        fi
      shell: bash

    - uses: actions/upload-artifact@v4
      with:
        name: executable-${{ matrix.os }}
        path: |
          dist/social-media-gif-downloader-${{ matrix.os }}*
        compression-level: 0